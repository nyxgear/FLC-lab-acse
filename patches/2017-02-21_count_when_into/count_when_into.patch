diff --git a/acse/Acse.lex b/acse/Acse.lex
index 663b2db..be8237a 100644
--- a/acse/Acse.lex
+++ b/acse/Acse.lex
@@ -97,6 +97,9 @@ ID       [a-zA-Z_][a-zA-Z0-9_]*
 "return"          { return RETURN; }
 "read"            { return READ; }
 "write"           { return WRITE; }
+"count"           { return COUNT; }
+"when"            { return WHEN; }
+"into"            { return INTO; }
 
 {ID}              { yylval.svalue=strdup(yytext); return IDENTIFIER; }
 {DIGIT}+          { yylval.intval = atoi( yytext );
diff --git a/acse/Acse.y b/acse/Acse.y
index ec9ef8b..9ca47b7 100644
--- a/acse/Acse.y
+++ b/acse/Acse.y
@@ -108,7 +108,8 @@ extern int yyerror(const char* errmsg);
    t_list *list;
    t_axe_label *label;
    t_while_statement while_stmt;
-} 
+   t_when_statement when_stmt;
+}
 /*=========================================================================
                                TOKENS 
 =========================================================================*/
@@ -124,6 +125,8 @@ extern int yyerror(const char* errmsg);
 %token RETURN
 %token READ
 %token WRITE
+%token COUNT
+%token INTO
 
 %token <label> DO
 %token <while_stmt> WHILE
@@ -133,11 +136,14 @@ extern int yyerror(const char* errmsg);
 %token <svalue> IDENTIFIER
 %token <intval> NUMBER
 
+%token <when_stmt> WHEN
+
 %type <expr> exp
 %type <decl> declaration
 %type <list> declaration_list
 %type <label> if_stmt
-
+%type <intval> when_statement
+%type <intval> when_statements
 /*=========================================================================
                           OPERATOR PRECEDENCES
  =========================================================================*/
@@ -253,6 +259,7 @@ control_statement : if_statement         { /* does nothing */ }
             | while_statement            { /* does nothing */ }
             | do_while_statement SEMI    { /* does nothing */ }
             | return_statement SEMI      { /* does nothing */ }
+            | count_when_into_statement SEMI { /* does nothing */ }
 ;
 
 read_write_statement : read_statement  { /* does nothing */ }
@@ -353,6 +360,41 @@ if_stmt  :  IF
                code_block { $$ = $1; }
 ;
 
+count_when_into_statement: COUNT LBRACE when_statements RBRACE INTO IDENTIFIER
+                         {
+                            int vreg = get_symbol_location(program, $6, 0);
+                            gen_andb_instruction(program, vreg, $3, $3, CG_DIRECT_ALL);
+                         }
+
+
+when_statements: when_statements COMMA when_statement
+               {
+                $$ = $1;
+                gen_add_instruction(program, $1, $1, $3, CG_DIRECT_ALL);
+               }
+               | when_statement {
+                 $$ = $1;
+               };
+
+when_statement: WHEN LPAR exp RPAR {
+                    $1.label = newLabel(program);
+                    $1.reg = gen_load_immediate(program, 0);
+                    if ($3.expression_type == IMMEDIATE)
+                        gen_load_immediate(program, $3.value);
+                    else
+                        gen_andb_instruction(program, $3.value, $3.value,
+                                             $3.value, CG_DIRECT_ALL);
+                    gen_beq_instruction(program, $1.label, 0);
+                    gen_addi_instruction(program, $1.reg, $1.reg, 1);
+                }
+                code_block
+                {
+                    $$ = $1.reg;
+                    assignLabel(program, $1.label);
+                }
+
+
+
 while_statement  : WHILE
                   {
                      /* initialize the value of the non-terminal */
@@ -457,6 +499,7 @@ write_statement : WRITE LPAR exp RPAR
             }
 ;
 
+
 exp: NUMBER      { $$ = create_expression ($1, IMMEDIATE); }
    | IDENTIFIER  {
                      int location;
diff --git a/acse/axe_struct.h b/acse/axe_struct.h
index 47663cc..66405bb 100644
--- a/acse/axe_struct.h
+++ b/acse/axe_struct.h
@@ -114,6 +114,13 @@ typedef struct t_while_statement
                                     * that follows the while construct */
 } t_while_statement;
 
+
+typedef struct t_when_statement
+{
+    t_axe_label *label;
+    int reg;
+} t_when_statement;
+
 /* create a label */
 extern t_axe_label * alloc_label(int value);
 
diff --git a/tests/Makefile b/tests/Makefile
index a3aed3b..7f4fee1 100644
--- a/tests/Makefile
+++ b/tests/Makefile
@@ -1,7 +1,8 @@
 asm=$(CURDIR)/../bin/asm
 acse=$(CURDIR)/../bin/acse
 export asm acse
-dirs:=arrays sum dowhile fact mult_table power semi assign arrays arrays2 misc
+dirs:=arrays sum dowhile fact mult_table power semi assign arrays arrays2 misc \
+count
 
 test :
 	for i in $(dirs); do $(MAKE) -C $$i -f ../Makefile.test ; done
diff --git a/tests/count/count.src b/tests/count/count.src
new file mode 100644
index 0000000..f0dac58
--- /dev/null
+++ b/tests/count/count.src
@@ -0,0 +1,8 @@
+int a=2 ,b=3;
+count {
+  when (7) {
+    write(1);
+  }
+} into a;
+
+write(a);
