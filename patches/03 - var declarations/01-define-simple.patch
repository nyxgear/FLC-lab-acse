diff -uNr acse_1.1.0/acse/Acse.lex acse_1.1.0-def/acse/Acse.lex
--- acse_1.1.0/acse/Acse.lex	2008-11-21 12:47:02.000000000 +0100
+++ acse_1.1.0-def/acse/Acse.lex	2013-12-10 12:12:12.186742699 +0100
@@ -24,6 +24,7 @@
 /* Variables declared in the lexer for error tracking */
 extern int line_num;
 extern int num_error;
+extern t_list *defines;
 
 /* extern declaration of function yyerror */
 extern int yyerror(const char* errmsg);
@@ -98,8 +99,21 @@
 "return"          { return RETURN; }
 "read"            { return READ; }
 "write"           { return WRITE; }
+"define"          { return DEFINE; }
 
-{ID}              { yylval.svalue=strdup(yytext); return IDENTIFIER; }
+{ID}              {
+                      t_list *l;
+                      for (l = defines; l; l = LNEXT(l)) {
+                        t_axe_define *d = (t_axe_define*)(LDATA(l));
+                        if (strcmp(d->name, yytext) == 0) {
+                          yylval.intval = d->value;
+                          return NUMBER;
+                        }
+                      }
+
+                      yylval.svalue=strdup(yytext); return IDENTIFIER;
+
+                  }
 {DIGIT}+          { yylval.intval = atoi( yytext );
                     return(NUMBER); }
 
diff -uNr acse_1.1.0/acse/Acse.y acse_1.1.0-def/acse/Acse.y
--- acse_1.1.0/acse/Acse.y	2008-12-23 17:02:28.000000000 +0100
+++ acse_1.1.0-def/acse/Acse.y	2013-12-10 12:03:36.629535712 +0100
@@ -90,6 +90,7 @@
 
 t_io_infos *file_infos;    /* input and output files used by the compiler */
 
+t_list *defines = NULL;
 %}
 
 %expect 1
@@ -122,6 +123,7 @@
 %token RETURN
 %token READ
 %token WRITE
+%token DEFINE
 
 %token <label> DO
 %token <while_stmt> WHILE
@@ -164,7 +166,7 @@
       2. A list of instructions. (at least one instruction!).
  * When the rule associated with the non-terminal `program' is executed,
  * the parser notify it to the `program' singleton instance. */
-program  : var_declarations statements
+program  : define_declarations var_declarations statements
          {
             /* Notify the end of the program. Once called
              * the function `set_end_Program' - if necessary -
@@ -177,6 +179,20 @@
          }
 ;
 
+define_declarations : define_declarations define_declaration
+                    |
+                    ;
+
+define_declaration : DEFINE IDENTIFIER NUMBER
+                     {
+                        t_axe_define *def = malloc(sizeof(t_axe_define));
+                        def->name = strdup($2);
+                        def->value = $3;
+                        free($2);
+                        defines = addFirst(defines, def);
+                     }
+                   ;
+
 var_declarations : var_declarations var_declaration   { /* does nothing */ }
                  | /* empty */                        { /* does nothing */ }
 ;
diff -uNr acse_1.1.0/acse/axe_struct.h acse_1.1.0-def/acse/axe_struct.h
--- acse_1.1.0/acse/axe_struct.h	2008-11-21 12:47:02.000000000 +0100
+++ acse_1.1.0-def/acse/axe_struct.h	2013-12-10 12:00:56.433736901 +0100
@@ -114,6 +114,11 @@
                                     * that follows the while construct */
 } t_while_statement;
 
+typedef struct t_axe_define {
+  char *name;
+  int value;
+} t_axe_define;
+
 /* create a label */
 extern t_axe_label * alloc_label(int value);
 
diff -uNr acse_1.1.0/tests/define/define.src acse_1.1.0-def/tests/define/define.src
--- acse_1.1.0/tests/define/define.src	1970-01-01 01:00:00.000000000 +0100
+++ acse_1.1.0-def/tests/define/define.src	2013-12-10 15:14:54.666509058 +0100
@@ -0,0 +1,6 @@
+define FOO 42
+define BAR 56
+
+int a;
+read(a);
+write(a * FOO - BAR);
diff -uNr acse_1.1.0/tests/Makefile acse_1.1.0-def/tests/Makefile
--- acse_1.1.0/tests/Makefile	2008-12-14 01:05:42.000000000 +0100
+++ acse_1.1.0-def/tests/Makefile	2013-12-10 15:15:34.776291764 +0100
@@ -1,7 +1,7 @@
 asm=$(CURDIR)/../bin/asm
 acse=$(CURDIR)/../bin/acse
 export asm acse
-dirs:=arrays sum dowhile fact mult_table power semi assign arrays arrays2 misc
+dirs:=arrays sum dowhile fact mult_table power semi assign arrays arrays2 misc define
 
 test :
 	for i in $(dirs); do $(MAKE) -C $$i -f ../Makefile.test ; done
