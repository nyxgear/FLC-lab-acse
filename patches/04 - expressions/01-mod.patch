diff --git a/acse/Acse.y b/acse/Acse.y
index 7029c8b..6c24cbe 100644
--- a/acse/Acse.y
+++ b/acse/Acse.y
@@ -150,7 +150,7 @@ t_io_infos *file_infos;    /* input and output files used by the compiler */
 %left LT GT LTEQ GTEQ
 %left SHL_OP SHR_OP
 %left MINUS PLUS
-%left MUL_OP DIV_OP
+%left MUL_OP DIV_OP MOD_OP
 %right NOT
 
 /*=========================================================================
@@ -526,6 +526,17 @@ exp: NUMBER      { $$ = create_expression ($1, IMMEDIATE); }
    | exp DIV_OP exp     {
                            $$ = handle_bin_numeric_op(program, $1, $3, DIV);
    }
+   | exp MOD_OP exp  {
+     /* Note that the computation is valid also for negative input, 
+        it's just another convention for quotient and remainder */  
+     if ($1.expression_type == IMMEDIATE && $3.expression_type == IMMEDIATE) {
+       $$ = create_expression($1.value % $3.value, IMMEDIATE);
+     } else {
+       t_axe_expression q = handle_bin_numeric_op(program, $1, $3, DIV);
+       t_axe_expression qd = handle_bin_numeric_op(program, q, $3, MUL);
+       $$ = handle_bin_numeric_op(program, $1, qd, SUB);
+     }
+   }
    | exp LT exp      {
                         $$ = handle_binary_comparison (program, $1, $3, _LT_);
    }
diff --git a/tests/Makefile b/tests/Makefile
index a3aed3b..2cecaa4 100644
--- a/tests/Makefile
+++ b/tests/Makefile
@@ -1,7 +1,7 @@
 asm=$(CURDIR)/../bin/asm
 acse=$(CURDIR)/../bin/acse
 export asm acse
-dirs:=arrays sum dowhile fact mult_table power semi assign arrays arrays2 misc
+dirs:=arrays sum dowhile fact mult_table power semi assign arrays arrays2 misc mod
 
 test :
 	for i in $(dirs); do $(MAKE) -C $$i -f ../Makefile.test ; done
